# /src/P2

add_subdirectory(splice)

file(GLOB P2_SOURCE_FILES *.cpp)
add_library(P2 STATIC ${P2_SOURCE_FILES} "brx.h" "brx.cpp" "alo.h" "alo.cpp" "lo.h" "lo.cpp" "dl.cpp" "slotheap.h" "slotheap.cpp" "Basic.h" "Basic.cpp" "light.h" "light.cpp" "sidebag.h" "sidebag.cpp" "gc.h" "gc.cpp" "ref.h" "ref.cpp" "geom.h" "geom.cpp" "break.h" "break.cpp" "vis.h" "vis.cpp" "pzo.h" "pzo.cpp" "po.h" "bsp.h" "bsp.cpp" "emitter.h" "emitter.cpp" "rip.h" "rip.cpp" "lookat.h" "lookat.cpp" "act.h" "act.cpp" "sm.h" "sm.cpp" "serialize.h" "serialize.cpp" "find.h" "find.cpp" "glob.h" "glob.cpp" "step.h" "step.cpp" "jt.h" "jt.cpp" "stepguard.h" "stepguard.cpp" "smartguard.h" "smartguard.cpp" "gomer.h" "gomer.cpp" "ub.h" "ub.cpp" "mb.h" "mb.cpp" "murray.h" "murray.cpp" "puffer.h" "puffer.cpp" "crusher.h" "crusher.cpp" "tank.h" "tank.cpp" "jp.h" "jp.cpp" "hg.h" "hg.cpp" "mecha.h" "mecha.cpp" "rog.h" "rog.cpp" "turret.h" "turret.cpp" "mouthgame.h" "suv.h" "suv.cpp" "cycle.h" "cycle.cpp" "lgn.h" "lgn.cpp" "jack.h" "jack.cpp" "water.h" "water.cpp" "can.h" "can.cpp" "dartgun.h" "dartgun.cpp" "dart.h" "dart.cpp" "button.h" "button.cpp" "jlo.h" "jlo.cpp" "squish.h" "squish.cpp" "bone.h" "bone.cpp" "barrier.h" "barrier.cpp" "ik.h" "ik.cpp" "cnvo.h" "cnvo.cpp" "hide.h" "hide.cpp" "bomb.h" "bomb.cpp" "missile.cpp" "missile.h" "fly.h" "fly.cpp" "rat.cpp" "rat.h" "dsp.h" "dsp.cpp" "mrkv.h" "mrkv.cpp" "blip.h" "blip.cpp" "proxy.h" "proxy.cpp" "sky.h" "sky.cpp" "tail.h" "tail.cpp" "flash.h" "flash.cpp" "dysh.h" "dysh.cpp" "waypoint.h" "waypoint.cpp" "tn.h" "tn.cpp" "rope.h" "rope.cpp" "shape.h" "shape.cpp" "pipe.h" "pipe.cpp" "rail.h" "rail.cpp" "bq.cpp" "landing.h" "landing.cpp" "target.h" "target.cpp" "hnd.h" "hnd.cpp" "pnt.h" "pnt.cpp" "jump.h" "jump.cpp" "spire.h" "spire.cpp" "map2d.h" "map2d.cpp" "path.h" "rchm.h" "rchm.cpp" "rwm.h" "rwm.cpp" "wr.h" "wr.cpp" "jsg.h" "jsg.cpp" "asega.h" "asega.cpp" "ms.h" "ms.cpp" "pose.h" "pose.cpp" "bbmark.cpp" "spliceobj.h" "spliceobj.cpp" "ps2t/spaprops.cpp" "ac.h" "ac.cpp")
target_include_directories(P2 PUBLIC ${CMAKE_CURRENT_SOURCE_DIR})
target_link_libraries(P2 PUBLIC SPLICE)
